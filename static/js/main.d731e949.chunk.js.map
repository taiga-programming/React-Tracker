{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","Globalprovider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","amounts","useContext","map","amount","console","log","total","reduce","acc","item","toFixed","IncomeExpenses","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d731e949.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div>\r\n       Expense-Tracker\r\n    </div>\r\n  );\r\n}\r\n","export default (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n    return {\r\n      ...state,\r\n      transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n    }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions:[action.payload,...state.transactions]\r\n      }\r\n\r\n    default: \r\n      return state;\r\n  }\r\n}","import React, { createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: []\r\n}\r\n\r\n// create context \r\n\r\nexport const GlobalContext  = createContext(initialState);\r\n\r\n//Provider component \r\nexport const Globalprovider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Actions \r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return(\r\n  <GlobalContext.Provider value={ {\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n\r\n    {children}\r\n  </GlobalContext.Provider>\r\n  );\r\n}","import React, { useContext } from 'react';\r\n\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n\r\n  const { transactions } = useContext(GlobalContext);\r\n  \r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  console.log(amounts);\r\n  \r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n    <h4>Your Balance</h4>\r\n    <h1>${total}</h1>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  \r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n\r\n\r\n  const income = amounts\r\n  \r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2); \r\n  \r\n  const expense = ( \r\n    amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n    ).toFixed(2); \r\n\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n    <div>\r\n      <h4>Income</h4>\r\n  <p className=\"money plus\">{income}</p>\r\n    </div>\r\n    <div>\r\n      <h4>Expense</h4>\r\n  <p className=\"money minus\">{expense}</p>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  \r\n  const { deleteTransaction } =useContext(GlobalContext);\r\n\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n  \r\n  return (\r\n    <li className ={transaction.amount < 0 ? 'minus': 'p'}>\r\n        {transaction.text} <span>{sign}${Math.abs(transaction.amount)} </span>\r\n        \r\n        <button \r\n        onClick={() => deleteTransaction(transaction.id) }\r\n        \r\n        className=\"delete-btn\">x</button>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n\r\n  const { transactions } = useContext(GlobalContext);\r\n  \r\n  \r\n  return (\r\n  <>\r\n    <h3>History</h3>\r\n    <ul className=\"list\">\r\n      {transactions.map(transaction =>(\r\n        <Transaction key={transaction.id} transaction={transaction}/>\r\n        ))} \r\n    </ul>\r\n  </>\r\n  );\r\n}\r\n","import React ,{ useState, useContext } from 'react'\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n   \r\n  const { addTransaction } =useContext(GlobalContext);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <h3>Add new transaction</h3>\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"text\">Text</label>\r\n        <input type=\"text\"  value={text} onChange={(e) => setText(e.target.value)}  placeholder=\"Enter text...\" />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"amount\"\r\n          >Amount <br />\r\n          (negative - expense, positive - income)</label\r\n        >\r\n        <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)}  placeholder=\"Enter amount...\" />\r\n      </div>\r\n      <button className=\"btn\">Add transaction</button>\r\n    </form>\r\n  </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Header } from './components/Header';\r\nimport  { Balance } from './components/Balance';\r\nimport  { IncomeExpenses } from './components/IncomeExpenses';\r\nimport { TransactionList } from './components/TransactionList';\r\nimport  { AddTransaction } from './components/AddTransaction';\r\nimport  { Globalprovider } from './context/GlobalState';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Globalprovider>\r\n      <Header/>\r\n      <div className=\"container\">\r\n        <Balance/>\r\n        <IncomeExpenses/>\r\n        <TransactionList/>\r\n        <AddTransaction/>\r\n      </div>\r\n    </Globalprovider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}